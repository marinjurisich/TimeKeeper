// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeKeeper.Data;

#nullable disable

namespace TimeKeeper.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230321212614_AddedSeedData")]
    partial class AddedSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TimeKeeper.Models.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "A demo company address",
                            name = "D.E.M.O. Company"
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.Month", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("grade")
                        .HasColumnType("float");

                    b.Property<double>("payPerHour")
                        .HasColumnType("float");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<double>("workHours")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Months");

                    b.HasData(
                        new
                        {
                            id = 1,
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            grade = 0.0,
                            payPerHour = 16.489999999999998,
                            salary = 2637.330078125,
                            userId = 1,
                            workHours = 160.0
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            id = 1,
                            companyId = 1,
                            description = "Official project of the demo company",
                            name = "A Demo Company's demo project"
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("grade")
                        .HasColumnType("float");

                    b.Property<string>("guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("payPerHour")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            companyId = 1,
                            email = "demo@mail.com",
                            firstName = "Demo",
                            grade = 0.0,
                            guid = "not-a-guid",
                            isAdmin = true,
                            lastName = "Account",
                            password = "pass",
                            payPerHour = 4.4500000000000002
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.Workday", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("clockIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("clockOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("grade")
                        .HasColumnType("float");

                    b.Property<int>("projectId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<double>("workHours")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Workdays");

                    b.HasData(
                        new
                        {
                            id = 1,
                            clockIn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            clockOut = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Worked on Demo Company's demo project",
                            grade = 0.0,
                            projectId = 1,
                            userId = 1,
                            workHours = 8.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
