// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeKeeper.Data;

#nullable disable

namespace TimeKeeper.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TimeKeeper.Models.Company", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            id = 1,
                            address = "A demo company address",
                            name = "D.E.M.O. Company"
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.Month", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<double?>("grade")
                        .HasColumnType("float");

                    b.Property<double>("payPerHour")
                        .HasColumnType("float");

                    b.Property<double>("salary")
                        .HasColumnType("float");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<double>("workHours")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Months");

                    b.HasData(
                        new
                        {
                            id = 1,
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            grade = 0.0,
                            payPerHour = 16.489999999999998,
                            salary = 2637.330078125,
                            userId = 1,
                            workHours = 160.0
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.Project", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            id = 1,
                            companyId = 1,
                            description = "Official project of the demo company",
                            name = "A Demo Company's demo project"
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("companyId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("grade")
                        .HasColumnType("float");

                    b.Property<string>("guid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("payPerHour")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            id = 1,
                            companyId = 1,
                            email = "demo@mail.com",
                            firstName = "Demo",
                            grade = 0.0,
                            guid = "c2dfa247-a2f1-483d-958f-fbb60a5ec527",
                            isAdmin = true,
                            lastName = "Account",
                            password = "80EA7B3C979BF51045EA9EB2FAABBBFC858BECABA5A653EC9E06965DF5FA95843045C25BFD66E63F202FA5E04A9CF7C1F2889F769C0AEEB2458D3F373D1BE439",
                            payPerHour = 4.4500000000000002
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.UserSalt", b =>
                {
                    b.Property<string>("email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<byte[]>("salt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("email");

                    b.ToTable("UserSalts");

                    b.HasData(
                        new
                        {
                            email = "demo@mail.com",
                            salt = new byte[] { 76, 21, 201, 90, 10, 67, 184, 0, 230, 125, 191, 193, 4, 83, 66, 74, 110, 198, 237, 92, 28, 181, 15, 231, 47, 56, 55, 77, 245, 188, 7, 41, 59, 7, 158, 72, 86, 100, 9, 108, 228, 219, 74, 165, 157, 245, 117, 229, 50, 89, 57, 158, 126, 51, 249, 168, 172, 221, 240, 81, 210, 73, 143, 176 }
                        });
                });

            modelBuilder.Entity("TimeKeeper.Models.Workday", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("attachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("clockIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("clockOut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("grade")
                        .HasColumnType("float");

                    b.Property<int?>("projectId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<double?>("workHours")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("Workdays");

                    b.HasData(
                        new
                        {
                            id = 1,
                            clockIn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            clockOut = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            date = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            description = "Worked on Demo Company's demo project",
                            grade = 0.0,
                            projectId = 1,
                            userId = 1,
                            workHours = 8.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
